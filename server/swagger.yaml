openapi: 3.0.0
info:
  title: Soaps & Candles
  version: 1.0.0
  description: "PERN stack of e-commerce project for Soaps & Candles store"
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
  
servers:
  - url: "http://localhost:3000"
    description: "Main server"
  
  
tags:
  - name: CUSTOMERS
    description: Operations related to customers
  - name: PRODUCTS
    description: Operations related to products
  - name: CART
    description: Operations related to the shopping cart

paths:
  /customers:
    get:
      summary: Get all customers
      tags:
        - CUSTOMERS
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - customer_id: 1
                  first_name: John
                  last_name: Doe
                  email: john.doe@example.com
                  address: 123 Main St
                - customer_id: 2
                  first_name: Jane
                  last_name: Smith
                  email: jane.smith@example.com
                  address: 456 Oak Ave

    post:
      summary: Create a new customer
      tags:
        - CUSTOMERS
      requestBody:
        required: true
        content:
          application/json:
            example:
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              address: 123 Main St
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              example:
                customer_id: 3
                first_name: John
                last_name: Doe
                email: john.doe@example.com
                address: 123 Main St

  /customers/{customer_id}:
    get:
      summary: Get a customer by id
      tags:
        - CUSTOMERS
      parameters:
        - name: customer_id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                customer_id: 1
                first_name: John
                last_name: Doe
                email: john.doe@example.com
                address: 123 Main St
        '404':
          description: Customer not found

    put:
      summary: Update a specific customer
      tags:
        - CUSTOMERS
      parameters:
        - name: customer_id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example:
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              address: 123 Main St
      responses:
        '200':
          description: Customer updated successfully
        '404':
          description: Customer not found

    delete:
      summary: Delete a specific customer
      tags:
        - CUSTOMERS
      parameters:
        - name: customer_id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted successfully
        '404':
          description: Customer not found

  /products:
    get:
      summary: Get all products
      tags:
        - PRODUCTS
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - product_id: 1
                  name: Lavender Candle
                  price: 10.99
                  description: Hand-poured lavender-scented soy wax candle
                - product_id: 2
                  name: Vanilla Soap
                  price: 5.99
                  description: Luxurious handmade vanilla-scented soap bar

    post:
      summary: Create a new product
      tags:
        - PRODUCTS
      requestBody:
        required: true
        content:
          application/json:
            example:
              name: Lavender Candle
              price: 10.99
              description: Hand-poured lavender-scented soy wax candle
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              example:
                product_id: 3
                name: Lavender Candle
                price: 10.99
                description: Hand-poured lavender-scented soy wax candle

  /products/{product_id}:
    get:
      summary: Get a product by id
      tags:
        - PRODUCTS
      parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                product_id: 1
                name: Lavender Candle
                price: 10.99
                description: Hand-poured lavender-scented soy wax candle
        '404':
          description: Product not found

    put:
      summary: Update a specific product
      tags:
        - PRODUCTS
      parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example:
              name: Lavender Candle
              price: 10.99
              description: Hand-poured lavender-scented soy wax candle
      responses:
        '200':
          description: Product updated successfully
        '404':
          description: Product not found

    delete:
      summary: Delete a specific product
      tags:
        - PRODUCTS
      parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found

  /cart:
    get:
      summary: Get all items in the cart
      tags:
        - CART
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - cart_id: 1
                  product_id: 1
                  quantity: 2
                - cart_id: 2
                  product_id: 2
                  quantity: 1

    post:
      summary: Add a new item to the cart
      tags:
        - CART
      requestBody:
        required: true
        content:
          application/json:
            example:
              product_id: 1
              quantity: 2
      responses:
        '201':
          description: Item added to the cart successfully
          content:
            application/json:
              example:
                cart_id: 3
                product_id: 1
                quantity: 2

  /cart/{cart_id}:
    get:
      summary: Get a cart item by id
      tags:
        - CART
      parameters:
        - name: cart_id
          in: path
          description: ID of the cart item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                cart_id: 1
                product_id: 1
                quantity: 2
        '404':
          description: Cart item not found

    put:
      summary: Update quantity of a specific cart item
      tags:
        - CART
      parameters:
        - name: cart_id
          in: path
          description: ID of the cart item
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example:
              quantity: 3
      responses:
        '200':
          description: Cart item updated successfully
        '404':
          description: Cart item not found

    delete:
      summary: Remove a specific item from the cart
      tags:
        - CART
      parameters:
        - name: cart_id
          in: path
          description: ID of the cart item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cart item deleted successfully
        '404':
          description: Cart item not found
components:
  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address:
          type: string

    Product:
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
        price:
          type: number
        description:
          type: string

    CartItem:
      type: object
      properties:
        cart_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
